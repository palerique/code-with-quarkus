name: Quarkus Native Docker Build, Push, Deploy

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'gradle'

      - name: Set the incremental Docker image tag
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
          env | sort

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build and push Quarkus native Docker image
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: |
            build
            -Dquarkus.package.type=native 
            -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel:22.1.0.0-Final-java17
            -Dquarkus.docker.dockerfile-native-path=src/main/docker/Dockerfile.native-micro
            -Dquarkus.native.container-build=true
            -Dquarkus.container-image.group=${GITHUB_REPOSITORY_OWNER}
            -Dquarkus.container-image.tag=${{ env.RELEASE_VERSION }}
            -Dquarkus.kubernetes.replicas=4
            -Dquarkus.kubernetes-config.secrets=tickit
            -Dquarkus.kubernetes-config.secrets.enabled=true
            -Dquarkus.kubernetes.service-type=node-port
            -Dquarkus.kubernetes.node-port=32319
            -Dquarkus.kubernetes.part-of=tickit-app
            -Dquarkus.kubernetes.version=1.0.0
            -Dquarkus.kubernetes.name=tickit-srv
            -Dquarkus.kubernetes.resources.requests.memory=64Mi
            -Dquarkus.kubernetes.resources.requests.cpu=250m
            -Dquarkus.kubernetes.resources.limits.memory=128Mi
            -Dquarkus.kubernetes.resources.limits.cpu=500m
            -Dquarkus.container-image.username=${{ secrets.DOCKERHUB_USERNAME }}
            -Dquarkus.container-image.password=${{ secrets.DOCKERHUB_PASSWORD }}
            -Dquarkus.container-image.push=true
            --info

      - name: Display Kubernetes resources
        run: cat build/kubernetes/kubernetes.yml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Apply resources
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          KUBECTL_VERSION: "v1.23.6"
          IAM_VERSION: "0.5.8"
        with:
          args: apply -f build/kubernetes/kubernetes.yml -n tickit

      - name: Upload Kubernetes artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubernetes-artifact
          path: build/kubernetes/kubernetes.yml